//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _004_ConsumidorConsoleAssincrono.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.ICalculadora")]
    public interface ICalculadora {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/Somar", ReplyAction="http://tempuri.org/ICalculadora/SomarResponse")]
        double Somar(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculadora/Somar", ReplyAction="http://tempuri.org/ICalculadora/SomarResponse")]
        System.IAsyncResult BeginSomar(double x, double y, System.AsyncCallback callback, object asyncState);
        
        double EndSomar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/Subtrair", ReplyAction="http://tempuri.org/ICalculadora/SubtrairResponse")]
        double Subtrair(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculadora/Subtrair", ReplyAction="http://tempuri.org/ICalculadora/SubtrairResponse")]
        System.IAsyncResult BeginSubtrair(double x, double y, System.AsyncCallback callback, object asyncState);
        
        double EndSubtrair(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/Multiplicar", ReplyAction="http://tempuri.org/ICalculadora/MultiplicarResponse")]
        double Multiplicar(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculadora/Multiplicar", ReplyAction="http://tempuri.org/ICalculadora/MultiplicarResponse")]
        System.IAsyncResult BeginMultiplicar(double x, double y, System.AsyncCallback callback, object asyncState);
        
        double EndMultiplicar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/Dividir", ReplyAction="http://tempuri.org/ICalculadora/DividirResponse")]
        double Dividir(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculadora/Dividir", ReplyAction="http://tempuri.org/ICalculadora/DividirResponse")]
        System.IAsyncResult BeginDividir(double x, double y, System.AsyncCallback callback, object asyncState);
        
        double EndDividir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/Elevar", ReplyAction="http://tempuri.org/ICalculadora/ElevarResponse")]
        double Elevar(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalculadora/Elevar", ReplyAction="http://tempuri.org/ICalculadora/ElevarResponse")]
        System.IAsyncResult BeginElevar(double x, double y, System.AsyncCallback callback, object asyncState);
        
        double EndElevar(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculadoraChannel : _004_ConsumidorConsoleAssincrono.Proxy.ICalculadora, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SomarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SomarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubtrairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubtrairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplicarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MultiplicarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DividirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DividirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElevarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ElevarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculadoraClient : System.ServiceModel.ClientBase<_004_ConsumidorConsoleAssincrono.Proxy.ICalculadora>, _004_ConsumidorConsoleAssincrono.Proxy.ICalculadora {
        
        private BeginOperationDelegate onBeginSomarDelegate;
        
        private EndOperationDelegate onEndSomarDelegate;
        
        private System.Threading.SendOrPostCallback onSomarCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubtrairDelegate;
        
        private EndOperationDelegate onEndSubtrairDelegate;
        
        private System.Threading.SendOrPostCallback onSubtrairCompletedDelegate;
        
        private BeginOperationDelegate onBeginMultiplicarDelegate;
        
        private EndOperationDelegate onEndMultiplicarDelegate;
        
        private System.Threading.SendOrPostCallback onMultiplicarCompletedDelegate;
        
        private BeginOperationDelegate onBeginDividirDelegate;
        
        private EndOperationDelegate onEndDividirDelegate;
        
        private System.Threading.SendOrPostCallback onDividirCompletedDelegate;
        
        private BeginOperationDelegate onBeginElevarDelegate;
        
        private EndOperationDelegate onEndElevarDelegate;
        
        private System.Threading.SendOrPostCallback onElevarCompletedDelegate;
        
        public CalculadoraClient() {
        }
        
        public CalculadoraClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculadoraClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SomarCompletedEventArgs> SomarCompleted;
        
        public event System.EventHandler<SubtrairCompletedEventArgs> SubtrairCompleted;
        
        public event System.EventHandler<MultiplicarCompletedEventArgs> MultiplicarCompleted;
        
        public event System.EventHandler<DividirCompletedEventArgs> DividirCompleted;
        
        public event System.EventHandler<ElevarCompletedEventArgs> ElevarCompleted;
        
        public double Somar(double x, double y) {
            return base.Channel.Somar(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSomar(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSomar(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndSomar(System.IAsyncResult result) {
            return base.Channel.EndSomar(result);
        }
        
        private System.IAsyncResult OnBeginSomar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginSomar(x, y, callback, asyncState);
        }
        
        private object[] OnEndSomar(System.IAsyncResult result) {
            double retVal = this.EndSomar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSomarCompleted(object state) {
            if ((this.SomarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SomarCompleted(this, new SomarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SomarAsync(double x, double y) {
            this.SomarAsync(x, y, null);
        }
        
        public void SomarAsync(double x, double y, object userState) {
            if ((this.onBeginSomarDelegate == null)) {
                this.onBeginSomarDelegate = new BeginOperationDelegate(this.OnBeginSomar);
            }
            if ((this.onEndSomarDelegate == null)) {
                this.onEndSomarDelegate = new EndOperationDelegate(this.OnEndSomar);
            }
            if ((this.onSomarCompletedDelegate == null)) {
                this.onSomarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSomarCompleted);
            }
            base.InvokeAsync(this.onBeginSomarDelegate, new object[] {
                        x,
                        y}, this.onEndSomarDelegate, this.onSomarCompletedDelegate, userState);
        }
        
        public double Subtrair(double x, double y) {
            return base.Channel.Subtrair(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubtrair(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubtrair(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndSubtrair(System.IAsyncResult result) {
            return base.Channel.EndSubtrair(result);
        }
        
        private System.IAsyncResult OnBeginSubtrair(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginSubtrair(x, y, callback, asyncState);
        }
        
        private object[] OnEndSubtrair(System.IAsyncResult result) {
            double retVal = this.EndSubtrair(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubtrairCompleted(object state) {
            if ((this.SubtrairCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubtrairCompleted(this, new SubtrairCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubtrairAsync(double x, double y) {
            this.SubtrairAsync(x, y, null);
        }
        
        public void SubtrairAsync(double x, double y, object userState) {
            if ((this.onBeginSubtrairDelegate == null)) {
                this.onBeginSubtrairDelegate = new BeginOperationDelegate(this.OnBeginSubtrair);
            }
            if ((this.onEndSubtrairDelegate == null)) {
                this.onEndSubtrairDelegate = new EndOperationDelegate(this.OnEndSubtrair);
            }
            if ((this.onSubtrairCompletedDelegate == null)) {
                this.onSubtrairCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubtrairCompleted);
            }
            base.InvokeAsync(this.onBeginSubtrairDelegate, new object[] {
                        x,
                        y}, this.onEndSubtrairDelegate, this.onSubtrairCompletedDelegate, userState);
        }
        
        public double Multiplicar(double x, double y) {
            return base.Channel.Multiplicar(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMultiplicar(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMultiplicar(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndMultiplicar(System.IAsyncResult result) {
            return base.Channel.EndMultiplicar(result);
        }
        
        private System.IAsyncResult OnBeginMultiplicar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginMultiplicar(x, y, callback, asyncState);
        }
        
        private object[] OnEndMultiplicar(System.IAsyncResult result) {
            double retVal = this.EndMultiplicar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMultiplicarCompleted(object state) {
            if ((this.MultiplicarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MultiplicarCompleted(this, new MultiplicarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MultiplicarAsync(double x, double y) {
            this.MultiplicarAsync(x, y, null);
        }
        
        public void MultiplicarAsync(double x, double y, object userState) {
            if ((this.onBeginMultiplicarDelegate == null)) {
                this.onBeginMultiplicarDelegate = new BeginOperationDelegate(this.OnBeginMultiplicar);
            }
            if ((this.onEndMultiplicarDelegate == null)) {
                this.onEndMultiplicarDelegate = new EndOperationDelegate(this.OnEndMultiplicar);
            }
            if ((this.onMultiplicarCompletedDelegate == null)) {
                this.onMultiplicarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMultiplicarCompleted);
            }
            base.InvokeAsync(this.onBeginMultiplicarDelegate, new object[] {
                        x,
                        y}, this.onEndMultiplicarDelegate, this.onMultiplicarCompletedDelegate, userState);
        }
        
        public double Dividir(double x, double y) {
            return base.Channel.Dividir(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDividir(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDividir(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndDividir(System.IAsyncResult result) {
            return base.Channel.EndDividir(result);
        }
        
        private System.IAsyncResult OnBeginDividir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginDividir(x, y, callback, asyncState);
        }
        
        private object[] OnEndDividir(System.IAsyncResult result) {
            double retVal = this.EndDividir(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDividirCompleted(object state) {
            if ((this.DividirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DividirCompleted(this, new DividirCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DividirAsync(double x, double y) {
            this.DividirAsync(x, y, null);
        }
        
        public void DividirAsync(double x, double y, object userState) {
            if ((this.onBeginDividirDelegate == null)) {
                this.onBeginDividirDelegate = new BeginOperationDelegate(this.OnBeginDividir);
            }
            if ((this.onEndDividirDelegate == null)) {
                this.onEndDividirDelegate = new EndOperationDelegate(this.OnEndDividir);
            }
            if ((this.onDividirCompletedDelegate == null)) {
                this.onDividirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDividirCompleted);
            }
            base.InvokeAsync(this.onBeginDividirDelegate, new object[] {
                        x,
                        y}, this.onEndDividirDelegate, this.onDividirCompletedDelegate, userState);
        }
        
        public double Elevar(double x, double y) {
            return base.Channel.Elevar(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginElevar(double x, double y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginElevar(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndElevar(System.IAsyncResult result) {
            return base.Channel.EndElevar(result);
        }
        
        private System.IAsyncResult OnBeginElevar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            return this.BeginElevar(x, y, callback, asyncState);
        }
        
        private object[] OnEndElevar(System.IAsyncResult result) {
            double retVal = this.EndElevar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnElevarCompleted(object state) {
            if ((this.ElevarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ElevarCompleted(this, new ElevarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ElevarAsync(double x, double y) {
            this.ElevarAsync(x, y, null);
        }
        
        public void ElevarAsync(double x, double y, object userState) {
            if ((this.onBeginElevarDelegate == null)) {
                this.onBeginElevarDelegate = new BeginOperationDelegate(this.OnBeginElevar);
            }
            if ((this.onEndElevarDelegate == null)) {
                this.onEndElevarDelegate = new EndOperationDelegate(this.OnEndElevar);
            }
            if ((this.onElevarCompletedDelegate == null)) {
                this.onElevarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnElevarCompleted);
            }
            base.InvokeAsync(this.onBeginElevarDelegate, new object[] {
                        x,
                        y}, this.onEndElevarDelegate, this.onElevarCompletedDelegate, userState);
        }
    }
}
