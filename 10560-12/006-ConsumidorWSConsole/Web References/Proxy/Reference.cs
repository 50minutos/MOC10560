//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace _006_ConsumidorWSConsole.Proxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CalculadoraSoap", Namespace="http://50minutos.com.br/")]
    public partial class Calculadora : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SomarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubtrairOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultiplicarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DividirOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Calculadora() {
            this.Url = global::_006_ConsumidorWSConsole.Properties.Settings.Default._006_ConsumidorWSConsole_Proxy_Calculadora;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SomarCompletedEventHandler SomarCompleted;
        
        /// <remarks/>
        public event SubtrairCompletedEventHandler SubtrairCompleted;
        
        /// <remarks/>
        public event MultiplicarCompletedEventHandler MultiplicarCompleted;
        
        /// <remarks/>
        public event DividirCompletedEventHandler DividirCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://50minutos.com.br/Somar", RequestNamespace="http://50minutos.com.br/", ResponseNamespace="http://50minutos.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double Somar(double x, double y) {
            object[] results = this.Invoke("Somar", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void SomarAsync(double x, double y) {
            this.SomarAsync(x, y, null);
        }
        
        /// <remarks/>
        public void SomarAsync(double x, double y, object userState) {
            if ((this.SomarOperationCompleted == null)) {
                this.SomarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSomarOperationCompleted);
            }
            this.InvokeAsync("Somar", new object[] {
                        x,
                        y}, this.SomarOperationCompleted, userState);
        }
        
        private void OnSomarOperationCompleted(object arg) {
            if ((this.SomarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SomarCompleted(this, new SomarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://50minutos.com.br/Subtrair", RequestNamespace="http://50minutos.com.br/", ResponseNamespace="http://50minutos.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double Subtrair(double x, double y) {
            object[] results = this.Invoke("Subtrair", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void SubtrairAsync(double x, double y) {
            this.SubtrairAsync(x, y, null);
        }
        
        /// <remarks/>
        public void SubtrairAsync(double x, double y, object userState) {
            if ((this.SubtrairOperationCompleted == null)) {
                this.SubtrairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubtrairOperationCompleted);
            }
            this.InvokeAsync("Subtrair", new object[] {
                        x,
                        y}, this.SubtrairOperationCompleted, userState);
        }
        
        private void OnSubtrairOperationCompleted(object arg) {
            if ((this.SubtrairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubtrairCompleted(this, new SubtrairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://50minutos.com.br/Multiplicar", RequestNamespace="http://50minutos.com.br/", ResponseNamespace="http://50minutos.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double Multiplicar(double x, double y) {
            object[] results = this.Invoke("Multiplicar", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void MultiplicarAsync(double x, double y) {
            this.MultiplicarAsync(x, y, null);
        }
        
        /// <remarks/>
        public void MultiplicarAsync(double x, double y, object userState) {
            if ((this.MultiplicarOperationCompleted == null)) {
                this.MultiplicarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiplicarOperationCompleted);
            }
            this.InvokeAsync("Multiplicar", new object[] {
                        x,
                        y}, this.MultiplicarOperationCompleted, userState);
        }
        
        private void OnMultiplicarOperationCompleted(object arg) {
            if ((this.MultiplicarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiplicarCompleted(this, new MultiplicarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://50minutos.com.br/Dividir", RequestNamespace="http://50minutos.com.br/", ResponseNamespace="http://50minutos.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double Dividir(double x, double y) {
            object[] results = this.Invoke("Dividir", new object[] {
                        x,
                        y});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void DividirAsync(double x, double y) {
            this.DividirAsync(x, y, null);
        }
        
        /// <remarks/>
        public void DividirAsync(double x, double y, object userState) {
            if ((this.DividirOperationCompleted == null)) {
                this.DividirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDividirOperationCompleted);
            }
            this.InvokeAsync("Dividir", new object[] {
                        x,
                        y}, this.DividirOperationCompleted, userState);
        }
        
        private void OnDividirOperationCompleted(object arg) {
            if ((this.DividirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DividirCompleted(this, new DividirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SomarCompletedEventHandler(object sender, SomarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SomarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SomarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubtrairCompletedEventHandler(object sender, SubtrairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubtrairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubtrairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MultiplicarCompletedEventHandler(object sender, MultiplicarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiplicarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiplicarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DividirCompletedEventHandler(object sender, DividirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DividirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DividirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591